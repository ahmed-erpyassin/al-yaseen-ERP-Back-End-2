name: 'Inventory Management / Items'
description: |-

  APIs for managing inventory items, including creation, updates, search, and transaction tracking.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/items/inventory-all
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'List Items'
      description: 'Retrieve a paginated list of inventory items with comprehensive filtering options.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      type:
        name: type
        description: 'Filter by item type.'
        required: false
        example: product
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      branch_id:
        name: branch_id
        description: 'Filter by branch ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      unit_id:
        name: unit_id
        description: 'Filter by unit ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'Filter by parent item ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      stock_tracking:
        name: stock_tracking
        description: 'Filter by stock tracking enabled.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Search across item names and descriptions.'
        required: false
        example: laptop
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      company_id:
        name: company_id
        description: 'Filter by company ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of items per page (default: 15).'
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      type: product
      branch_id: 1
      unit_id: 1
      parent_id: 1
      stock_tracking: true
      search: laptop
      company_id: 1
      per_page: 20
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "name": "Laptop Dell XPS 13",
                "code": "DELL-XPS-13",
                "type": "product",
                "unit": {
                  "id": 1,
                  "name": "Piece"
                },
                "stock_tracking": true,
                "company": {
                  "id": 1,
                  "name": "ABC Company"
                },
                "created_at": "2024-01-01T00:00:00.000000Z"
              }
            ],
            "message": "Items retrieved successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Error retrieving items: Database connection failed"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/items/register-item
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created item with all comprehensive data (Save functionality).'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      branch_id:
        name: branch_id
        description: 'The <code>id</code> of an existing record in the branches table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      unit_id:
        name: unit_id
        description: 'The <code>id</code> of an existing record in the units table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      warehouse_id:
        name: warehouse_id
        description: 'The <code>id</code> of an existing record in the warehouses table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      parent_id:
        name: parent_id
        description: 'The <code>id</code> of an existing record in the items table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      item_number:
        name: item_number
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      code:
        name: code
        description: 'Must not be greater than 255 characters.'
        required: true
        example: mniihfqcoynlazghdtqtq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      catalog_number:
        name: catalog_number
        description: 'Must not be greater than 255 characters.'
        required: false
        example: xbajwbpilpmufinllwloa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: uydlsmsjuryvojcybzvrb
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name_ar:
        name: name_ar
        description: 'Must not be greater than 255 characters.'
        required: false
        example: yickznkygloigmkwxphlv
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Dolores dolorum amet iste laborum eius est dolor.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description_ar:
        name: description_ar
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      model:
        name: model
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: product
        type: string
        enumValues:
          - product
          - service
          - material
          - raw_material
        exampleWasSpecified: false
        nullable: false
        custom: []
      quantity:
        name: quantity
        description: 'Must be at least 0.'
        required: false
        example: 45
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      balance:
        name: balance
        description: ''
        required: false
        example: 11613.31890586
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      minimum_limit:
        name: minimum_limit
        description: 'Must be at least 0.'
        required: false
        example: 50
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      maximum_limit:
        name: maximum_limit
        description: 'Must be at least 0.'
        required: false
        example: 55
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      reorder_limit:
        name: reorder_limit
        description: 'Must be at least 0.'
        required: false
        example: 19
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      max_reorder_limit:
        name: max_reorder_limit
        description: 'Must be at least 0.'
        required: false
        example: 70
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      cost_price:
        name: cost_price
        description: 'Must be at least 0.'
        required: false
        example: 70
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      purchase_price:
        name: purchase_price
        description: 'Must be at least 0.'
        required: false
        example: 12
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      first_purchase_price:
        name: first_purchase_price
        description: 'Must be at least 0.'
        required: false
        example: 66
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      second_purchase_price:
        name: second_purchase_price
        description: 'Must be at least 0.'
        required: false
        example: 13
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      third_purchase_price:
        name: third_purchase_price
        description: 'Must be at least 0.'
        required: false
        example: 65
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      purchase_discount_rate:
        name: purchase_discount_rate
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 20
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      purchase_prices_include_vat:
        name: purchase_prices_include_vat
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      sale_price:
        name: sale_price
        description: 'Must be at least 0.'
        required: false
        example: 18
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      minimum_sale_price:
        name: minimum_sale_price
        description: 'Must be at least 0.'
        required: false
        example: 74
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      first_sale_price:
        name: first_sale_price
        description: 'Must be at least 0.'
        required: false
        example: 87
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      second_sale_price:
        name: second_sale_price
        description: 'Must be at least 0.'
        required: false
        example: 76
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      third_sale_price:
        name: third_sale_price
        description: 'Must be at least 0.'
        required: false
        example: 10
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      sale_discount_rate:
        name: sale_discount_rate
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 3
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      maximum_sale_discount_rate:
        name: maximum_sale_discount_rate
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 17
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      minimum_allowed_sale_price:
        name: minimum_allowed_sale_price
        description: 'Must be at least 0.'
        required: false
        example: 1
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      sale_prices_include_vat:
        name: sale_prices_include_vat
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      item_subject_to_vat:
        name: item_subject_to_vat
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      notes:
        name: notes
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      barcode:
        name: barcode
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      barcode_type:
        name: barcode_type
        description: ''
        required: false
        example: ITF
        type: string
        enumValues:
          - C128
          - EAN13
          - C39
          - UPCA
          - ITF
        exampleWasSpecified: false
        nullable: true
        custom: []
      expiry_date:
        name: expiry_date
        description: 'Must be a valid date. Must be a date after <code>today</code>.'
        required: false
        example: '2106-11-03'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image:
        name: image
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      color:
        name: color
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mniihfqcoynlazghdtqtq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      item_type:
        name: item_type
        description: 'Must not be greater than 255 characters.'
        required: true
        example: xbajwbpilpmufinllwloa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      custom_item_type:
        name: custom_item_type
        description: 'Must not be greater than 255 characters.'
        required: false
        example: uydlsmsjuryvojcybzvrb
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      custom_item_type_ar:
        name: custom_item_type_ar
        description: 'Must not be greater than 255 characters.'
        required: false
        example: yickznkygloigmkwxphlv
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      active:
        name: active
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      stock_tracking:
        name: stock_tracking
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      unit_id: consequatur
      item_number: mqeopfuudtdsufvyvddqa
      code: mniihfqcoynlazghdtqtq
      catalog_number: xbajwbpilpmufinllwloa
      name: uydlsmsjuryvojcybzvrb
      name_ar: yickznkygloigmkwxphlv
      description: 'Dolores dolorum amet iste laborum eius est dolor.'
      description_ar: consequatur
      model: mqeopfuudtdsufvyvddqa
      type: product
      quantity: 45
      balance: 11613.31890586
      minimum_limit: 50
      maximum_limit: 55
      reorder_limit: 19
      max_reorder_limit: 70
      cost_price: 70
      purchase_price: 12
      first_purchase_price: 66
      second_purchase_price: 13
      third_purchase_price: 65
      purchase_discount_rate: 20
      purchase_prices_include_vat: true
      sale_price: 18
      minimum_sale_price: 74
      first_sale_price: 87
      second_sale_price: 76
      third_sale_price: 10
      sale_discount_rate: 3
      maximum_sale_discount_rate: 17
      minimum_allowed_sale_price: 1
      sale_prices_include_vat: false
      item_subject_to_vat: false
      notes: consequatur
      barcode: mqeopfuudtdsufvyvddqa
      barcode_type: ITF
      expiry_date: '2106-11-03'
      image: mqeopfuudtdsufvyvddqa
      color: mniihfqcoynlazghdtqtq
      item_type: xbajwbpilpmufinllwloa
      custom_item_type: uydlsmsjuryvojcybzvrb
      custom_item_type_ar: yickznkygloigmkwxphlv
      active: true
      stock_tracking: true
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/items/inspect-item/{id}'
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified item with all available data.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the inspect item.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/items/inspect-item/consequatur could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/items/modify-item/{id}'
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified item.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the modify item.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      branch_id:
        name: branch_id
        description: 'The <code>id</code> of an existing record in the branches table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      unit_id:
        name: unit_id
        description: 'The <code>id</code> of an existing record in the units table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'The <code>id</code> of an existing record in the items table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      item_number:
        name: item_number
        description: 'Must not be greater than 255 characters.'
        required: true
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      code:
        name: code
        description: 'Must not be greater than 255 characters.'
        required: true
        example: mniihfqcoynlazghdtqtq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      catalog_number:
        name: catalog_number
        description: 'Must not be greater than 255 characters.'
        required: false
        example: xbajwbpilpmufinllwloa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: uydlsmsjuryvojcybzvrb
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Dolores dolorum amet iste laborum eius est dolor.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      model:
        name: model
        description: 'Must not be greater than 255 characters.'
        required: false
        example: dtdsufvyvddqamniihfqc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: material
        type: string
        enumValues:
          - product
          - service
          - material
          - raw_material
        exampleWasSpecified: false
        nullable: false
        custom: []
      quantity:
        name: quantity
        description: 'Must be at least 0.'
        required: false
        example: 51
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      balance:
        name: balance
        description: ''
        required: false
        example: 11613.31890586
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      minimum_limit:
        name: minimum_limit
        description: 'Must be at least 0.'
        required: false
        example: 50
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      maximum_limit:
        name: maximum_limit
        description: 'Must be at least 0.'
        required: false
        example: 55
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      reorder_limit:
        name: reorder_limit
        description: 'Must be at least 0.'
        required: false
        example: 19
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      max_reorder_limit:
        name: max_reorder_limit
        description: 'Must be at least 0.'
        required: false
        example: 70
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      first_purchase_price:
        name: first_purchase_price
        description: 'Must be at least 0.'
        required: false
        example: 70
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      second_purchase_price:
        name: second_purchase_price
        description: 'Must be at least 0.'
        required: false
        example: 12
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      third_purchase_price:
        name: third_purchase_price
        description: 'Must be at least 0.'
        required: false
        example: 66
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      purchase_discount_rate:
        name: purchase_discount_rate
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 4
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      purchase_prices_include_vat:
        name: purchase_prices_include_vat
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_sale_price:
        name: first_sale_price
        description: 'Must be at least 0.'
        required: false
        example: 65
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      second_sale_price:
        name: second_sale_price
        description: 'Must be at least 0.'
        required: false
        example: 72
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      third_sale_price:
        name: third_sale_price
        description: 'Must be at least 0.'
        required: false
        example: 18
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      sale_discount_rate:
        name: sale_discount_rate
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 21
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      maximum_sale_discount_rate:
        name: maximum_sale_discount_rate
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 24
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      minimum_allowed_sale_price:
        name: minimum_allowed_sale_price
        description: 'Must be at least 0.'
        required: false
        example: 76
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      sale_prices_include_vat:
        name: sale_prices_include_vat
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      item_subject_to_vat:
        name: item_subject_to_vat
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      notes:
        name: notes
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      barcode:
        name: barcode
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      barcode_type:
        name: barcode_type
        description: ''
        required: false
        example: ITF
        type: string
        enumValues:
          - C128
          - EAN13
          - C39
          - UPCA
          - ITF
        exampleWasSpecified: false
        nullable: true
        custom: []
      expiry_date:
        name: expiry_date
        description: 'Must be a valid date. Must be a date after <code>today</code>.'
        required: false
        example: '2106-11-03'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      image:
        name: image
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      color:
        name: color
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mniihfqcoynlazghdtqtq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      item_type:
        name: item_type
        description: 'Must not be greater than 255 characters.'
        required: true
        example: xbajwbpilpmufinllwloa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      active:
        name: active
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      stock_tracking:
        name: stock_tracking
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      unit_id: consequatur
      item_number: mqeopfuudtdsufvyvddqa
      code: mniihfqcoynlazghdtqtq
      catalog_number: xbajwbpilpmufinllwloa
      name: uydlsmsjuryvojcybzvrb
      description: 'Dolores dolorum amet iste laborum eius est dolor.'
      model: dtdsufvyvddqamniihfqc
      type: material
      quantity: 51
      balance: 11613.31890586
      minimum_limit: 50
      maximum_limit: 55
      reorder_limit: 19
      max_reorder_limit: 70
      first_purchase_price: 70
      second_purchase_price: 12
      third_purchase_price: 66
      purchase_discount_rate: 4
      purchase_prices_include_vat: true
      first_sale_price: 65
      second_sale_price: 72
      third_sale_price: 18
      sale_discount_rate: 21
      maximum_sale_discount_rate: 24
      minimum_allowed_sale_price: 76
      sale_prices_include_vat: true
      item_subject_to_vat: false
      notes: consequatur
      barcode: mqeopfuudtdsufvyvddqa
      barcode_type: ITF
      expiry_date: '2106-11-03'
      image: mqeopfuudtdsufvyvddqa
      color: mniihfqcoynlazghdtqtq
      item_type: xbajwbpilpmufinllwloa
      active: false
      stock_tracking: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/items/discard-item/{id}'
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified item (soft delete).'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the discard item.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/items/locate-items
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Search for items with advanced filtering.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/items/locate-items could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/items/available-fields
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get available fields for dynamic selection.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/items/available-fields could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/items/sortable-columns
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get sortable columns with their Arabic labels.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/items/sortable-columns could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/items/item-categories
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get available categories/types for filtering.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/items/item-categories could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/items/storage-locations
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get available warehouses for item creation.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/items/storage-locations could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/items/pricing-configuration
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get pricing validation and form data.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/items/pricing-configuration could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/items/validate-pricing-data
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Validate pricing data.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      item_id:
        name: item_id
        description: 'The <code>id</code> of an existing record in the items table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      proposed_sale_price:
        name: proposed_sale_price
        description: 'Must be at least 0.'
        required: false
        example: 45
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      proposed_discount_rate:
        name: proposed_discount_rate
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 16
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      item_id: consequatur
      proposed_sale_price: 45
      proposed_discount_rate: 16
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/items/barcode-type-options
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get barcode types for dropdown.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/items/barcode-type-options could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/items/item-type-options
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get item types for dropdown.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/items/item-type-options could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/items/create-custom-type
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Create custom item type.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: vmqeopfuudtdsufvyvddq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name_ar:
        name: name_ar
        description: 'Must not be greater than 255 characters.'
        required: false
        example: amniihfqcoynlazghdtqt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: vmqeopfuudtdsufvyvddq
      name_ar: amniihfqcoynlazghdtqt
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/items/validate-barcode-format
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Validate barcode format.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      barcode:
        name: barcode
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      barcode_type:
        name: barcode_type
        description: ''
        required: true
        example: ITF
        type: string
        enumValues:
          - C128
          - EAN13
          - C39
          - UPCA
          - ITF
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      barcode: consequatur
      barcode_type: ITF
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/items/{item}/produce-barcode'
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Generate barcode for item (PNG or SVG).'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      item:
        name: item
        description: 'The item.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      item: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      width:
        name: width
        description: 'Must be at least 1. Must not be greater than 10.'
        required: false
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      height:
        name: height
        description: 'Must be at least 10. Must not be greater than 100.'
        required: false
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      format:
        name: format
        description: ''
        required: false
        example: png
        type: string
        enumValues:
          - png
          - svg
        exampleWasSpecified: false
        nullable: true
        custom: []
      color:
        name: color
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      width: 9
      height: 13
      format: png
      color: consequatur
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/items/{item}/produce-barcode-svg'
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Generate SVG barcode for item specifically.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      item:
        name: item
        description: 'The item.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      item: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      width:
        name: width
        description: 'Must be at least 1. Must not be greater than 10.'
        required: false
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      height:
        name: height
        description: 'Must be at least 10. Must not be greater than 100.'
        required: false
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      color:
        name: color
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      width: 9
      height: 13
      color: consequatur
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/items/{item}/item-transactions'
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all transactions/movements for a specific item.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      item:
        name: item
        description: 'The item.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      item: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      date_from:
        name: date_from
        description: 'Must be a valid date.'
        required: false
        example: '2025-10-05T09:46:11'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      date_to:
        name: date_to
        description: 'Must be a valid date. Must be a date after or equal to <code>date_from</code>.'
        required: false
        example: '2106-11-03'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      transaction_type:
        name: transaction_type
        description: ''
        required: false
        example: purchases
        type: string
        enumValues:
          - sales
          - purchases
          - stock_movements
          - all
        exampleWasSpecified: false
        nullable: true
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 100.'
        required: false
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      sort_by:
        name: sort_by
        description: ''
        required: false
        example: date
        type: string
        enumValues:
          - date
          - type
          - quantity
          - amount
        exampleWasSpecified: false
        nullable: true
        custom: []
      sort_direction:
        name: sort_direction
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      date_from: '2025-10-05T09:46:11'
      date_to: '2106-11-03'
      transaction_type: purchases
      per_page: 13
      sort_by: date
      sort_direction: asc
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/items/consequatur/item-transactions could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/items/{item}/export-transactions'
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Export item transactions to Excel.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      item:
        name: item
        description: 'The item.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      item: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      date_from:
        name: date_from
        description: 'Must be a valid date.'
        required: false
        example: '2025-10-05T09:46:11'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      date_to:
        name: date_to
        description: 'Must be a valid date. Must be a date after or equal to <code>date_from</code>.'
        required: false
        example: '2106-11-03'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      transaction_type:
        name: transaction_type
        description: ''
        required: false
        example: sales
        type: string
        enumValues:
          - sales
          - purchases
          - stock_movements
          - all
        exampleWasSpecified: false
        nullable: true
        custom: []
      export_type:
        name: export_type
        description: ''
        required: false
        example: multi_sheet
        type: string
        enumValues:
          - transactions
          - summary
          - multi_sheet
        exampleWasSpecified: false
        nullable: true
        custom: []
      format:
        name: format
        description: ''
        required: false
        example: csv
        type: string
        enumValues:
          - xlsx
          - csv
          - pdf
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      date_from: '2025-10-05T09:46:11'
      date_to: '2106-11-03'
      transaction_type: sales
      export_type: multi_sheet
      format: csv
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/items/consequatur/export-transactions could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/items/first-item
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the first item.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/items/first-item could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/items/last-item
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the last item.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/items/last-item could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/items/parent-items
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get parent items only.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/items/parent-items could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/items/by-type/{type}'
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get items by type.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      type: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/items/by-type/consequatur could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/items/deleted-items
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get trashed (soft deleted) items.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/items/deleted-items could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/items/preview-item/{id}'
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get comprehensive preview/review data for an item.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the preview item.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/items/preview-item/consequatur could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/items/{id}/restore-item'
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore a soft deleted item.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the item.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/items/{id}/permanently-delete'
    metadata:
      groupName: 'Inventory Management / Items'
      groupDescription: |-

        APIs for managing inventory items, including creation, updates, search, and transaction tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Permanently delete an item (force delete).'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the item.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
