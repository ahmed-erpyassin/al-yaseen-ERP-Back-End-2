name: 'Inventory Management / Stock Movements'
description: |-

  APIs for managing stock movements, including transfers, adjustments, and movement tracking.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/stock-movements/track-all
    metadata:
      groupName: 'Inventory Management / Stock Movements'
      groupDescription: |-

        APIs for managing stock movements, including transfers, adjustments, and movement tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of stock movements.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/stock-movements/record-movement
    metadata:
      groupName: 'Inventory Management / Stock Movements'
      groupDescription: |-

        APIs for managing stock movements, including transfers, adjustments, and movement tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created stock movement.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      inventory_item_id:
        name: inventory_item_id
        description: 'The <code>id</code> of an existing record in the inventory_items table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      warehouse_id:
        name: warehouse_id
        description: 'The <code>id</code> of an existing record in the warehouses table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      movement_type:
        name: movement_type
        description: ''
        required: true
        example: in
        type: string
        enumValues:
          - in
          - out
          - transfer
          - adjustment
        exampleWasSpecified: false
        nullable: false
        custom: []
      reference_type:
        name: reference_type
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      reference_id:
        name: reference_id
        description: ''
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      quantity:
        name: quantity
        description: 'Must be at least 0.01.'
        required: true
        example: 45
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      unit_cost:
        name: unit_cost
        description: 'Must be at least 0.'
        required: false
        example: 56
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      total_cost:
        name: total_cost
        description: 'Must be at least 0.'
        required: false
        example: 16
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      notes:
        name: notes
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      movement_date:
        name: movement_date
        description: 'Must be a valid date.'
        required: false
        example: '2025-09-22T13:43:35'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      inventory_item_id: consequatur
      warehouse_id: consequatur
      movement_type: in
      reference_type: mqeopfuudtdsufvyvddqa
      reference_id: 17
      quantity: 45
      unit_cost: 56
      total_cost: 16
      notes: consequatur
      movement_date: '2025-09-22T13:43:35'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/stock-movements/examine-movement/{id}'
    metadata:
      groupName: 'Inventory Management / Stock Movements'
      groupDescription: |-

        APIs for managing stock movements, including transfers, adjustments, and movement tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified stock movement.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the examine movement.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/stock-movements/movement-summary
    metadata:
      groupName: 'Inventory Management / Stock Movements'
      groupDescription: |-

        APIs for managing stock movements, including transfers, adjustments, and movement tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get stock summary for all items.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/stock-movements/by-item/{itemId}'
    metadata:
      groupName: 'Inventory Management / Stock Movements'
      groupDescription: |-

        APIs for managing stock movements, including transfers, adjustments, and movement tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get stock movements for a specific item.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      itemId:
        name: itemId
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      itemId: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/stock-movements/by-warehouse/{warehouseId}'
    metadata:
      groupName: 'Inventory Management / Stock Movements'
      groupDescription: |-

        APIs for managing stock movements, including transfers, adjustments, and movement tracking.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get stock movements for a specific warehouse.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      warehouseId:
        name: warehouseId
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      warehouseId: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
