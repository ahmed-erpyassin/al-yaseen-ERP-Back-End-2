name: 'Sales Management / Incoming Orders'
description: |-

  APIs for managing incoming sales orders, including order processing, tracking, and fulfillment.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/sales-management/incoming-orders/list-all
    metadata:
      groupName: 'Sales Management / Incoming Orders'
      groupDescription: |-

        APIs for managing incoming sales orders, including order processing, tracking, and fulfillment.
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource with advanced search and sorting.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/sales-management/incoming-orders/list-all could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/sales-management/incoming-orders/create-new
    metadata:
      groupName: 'Sales Management / Incoming Orders'
      groupDescription: |-

        APIs for managing incoming sales orders, including order processing, tracking, and fulfillment.
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      branch_id:
        name: branch_id
        description: 'The <code>id</code> of an existing record in the branches table.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      currency_id:
        name: currency_id
        description: 'The <code>id</code> of an existing record in the currencies table.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      employee_id:
        name: employee_id
        description: 'The <code>id</code> of an existing record in the employees table.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      customer_id:
        name: customer_id
        description: 'The <code>id</code> of an existing record in the customers table.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      journal_id:
        name: journal_id
        description: ''
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      journal_number:
        name: journal_number
        description: 'Must be at least 1.'
        required: true
        example: 45
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      book_code:
        name: book_code
        description: 'Must not be greater than 50 characters.'
        required: false
        example: qeopfuudtdsufvyvddqam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      invoice_number:
        name: invoice_number
        description: 'Must not be greater than 255 characters.'
        required: false
        example: niihfqcoynlazghdtqtqx
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      date:
        name: date
        description: 'Must be a valid date.'
        required: false
        example: '2025-09-30T13:03:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      time:
        name: time
        description: 'Must be a valid date in the format <code>H:i:s</code>.'
        required: false
        example: '13:03:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      due_date:
        name: due_date
        description: 'Must be a valid date. Must be a date after or equal to <code>today</code>.'
        required: true
        example: '2106-10-30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      customer_email:
        name: customer_email
        description: 'Must be a valid email address. Must not be greater than 150 characters.'
        required: false
        example: carolyne.luettgen@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      licensed_operator:
        name: licensed_operator
        description: 'Must not be greater than 255 characters.'
        required: false
        example: fuudtdsufvyvddqamniih
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      cash_paid:
        name: cash_paid
        description: 'Must be at least 0. Must not be greater than 999999999.99.'
        required: false
        example: 6
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      checks_paid:
        name: checks_paid
        description: 'Must be at least 0. Must not be greater than 999999999.99.'
        required: false
        example: 16
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      allowed_discount:
        name: allowed_discount
        description: 'Must be at least 0. Must not be greater than 999999999.99.'
        required: false
        example: 3
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      discount_percentage:
        name: discount_percentage
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 15
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      total_without_tax:
        name: total_without_tax
        description: 'Must be at least 0. Must not be greater than 999999999.99.'
        required: false
        example: 24
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      tax_percentage:
        name: tax_percentage
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 13
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      tax_amount:
        name: tax_amount
        description: 'Must be at least 0. Must not be greater than 999999999.99.'
        required: false
        example: 12
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      total_amount:
        name: total_amount
        description: 'Must be at least 0. Must not be greater than 999999999.99.'
        required: false
        example: 1
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      remaining_balance:
        name: remaining_balance
        description: 'Must be at least 0. Must not be greater than 999999999.99.'
        required: false
        example: 25
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      exchange_rate:
        name: exchange_rate
        description: 'Must be at least 0.0001. Must not be greater than 999999.9999.'
        required: true
        example: 6
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      total_foreign:
        name: total_foreign
        description: 'Must be at least 0. Must not be greater than 999999999.9999.'
        required: false
        example: 8
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      total_local:
        name: total_local
        description: 'Must be at least 0. Must not be greater than 999999999.9999.'
        required: false
        example: 4
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_tax_inclusive:
        name: is_tax_inclusive
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      notes:
        name: notes
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: tqtqxbajwbpilpmufinll
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      items:
        name: items
        description: 'Must have at least 1 items.'
        required: true
        example:
          - []
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].item_id':
        name: 'items[].item_id'
        description: 'The <code>id</code> of an existing record in the items table.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].item_number':
        name: 'items[].item_number'
        description: 'Must not be greater than 100 characters.'
        required: false
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].item_name':
        name: 'items[].item_name'
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mniihfqcoynlazghdtqtq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].unit_name':
        name: 'items[].unit_name'
        description: 'Must not be greater than 100 characters.'
        required: false
        example: xbajwbpilpmufinllwloa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].description':
        name: 'items[].description'
        description: 'Must not be greater than 500 characters.'
        required: false
        example: 'A qui ducimus nihil laudantium nihil autem omnis.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].quantity':
        name: 'items[].quantity'
        description: 'Must be at least 0.0001. Must not be greater than 999999.9999.'
        required: true
        example: 17
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].unit_price':
        name: 'items[].unit_price'
        description: 'Must be at least 0. Must not be greater than 999999999.99.'
        required: true
        example: 24
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].discount_rate':
        name: 'items[].discount_rate'
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 21
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].discount_percentage':
        name: 'items[].discount_percentage'
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 15
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].discount_amount':
        name: 'items[].discount_amount'
        description: 'Must be at least 0. Must not be greater than 999999999.99.'
        required: false
        example: 9
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].tax_rate':
        name: 'items[].tax_rate'
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 3
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].total_foreign':
        name: 'items[].total_foreign'
        description: 'Must be at least 0. Must not be greater than 999999999.9999.'
        required: false
        example: 24
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].total_local':
        name: 'items[].total_local'
        description: 'Must be at least 0. Must not be greater than 999999999.9999.'
        required: false
        example: 2
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].total':
        name: 'items[].total'
        description: 'Must be at least 0. Must not be greater than 999999999.99.'
        required: false
        example: 25
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      branch_id: 17
      currency_id: 17
      employee_id: 17
      customer_id: 17
      journal_id: 17
      journal_number: 45
      book_code: qeopfuudtdsufvyvddqam
      invoice_number: niihfqcoynlazghdtqtqx
      date: '2025-09-30T13:03:30'
      time: '13:03:30'
      due_date: '2106-10-30'
      customer_email: carolyne.luettgen@example.org
      licensed_operator: fuudtdsufvyvddqamniih
      cash_paid: 6
      checks_paid: 16
      allowed_discount: 3
      discount_percentage: 15
      total_without_tax: 24
      tax_percentage: 13
      tax_amount: 12
      total_amount: 1
      remaining_balance: 25
      exchange_rate: 6
      total_foreign: 8
      total_local: 4
      is_tax_inclusive: true
      notes: tqtqxbajwbpilpmufinll
      items:
        -
          item_id: 17
          item_number: mqeopfuudtdsufvyvddqa
          item_name: mniihfqcoynlazghdtqtq
          unit_name: xbajwbpilpmufinllwloa
          description: 'A qui ducimus nihil laudantium nihil autem omnis.'
          quantity: 17
          unit_price: 24
          discount_rate: 21
          discount_percentage: 15
          discount_amount: 9
          tax_rate: 3
          total_foreign: 24
          total_local: 2
          total: 25
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/sales-management/incoming-orders/show-details/{id}'
    metadata:
      groupName: 'Sales Management / Incoming Orders'
      groupDescription: |-

        APIs for managing incoming sales orders, including order processing, tracking, and fulfillment.
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the specified resource.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the show detail.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/sales-management/incoming-orders/show-details/consequatur could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/sales-management/incoming-orders/update-order/{id}'
    metadata:
      groupName: 'Sales Management / Incoming Orders'
      groupDescription: |-

        APIs for managing incoming sales orders, including order processing, tracking, and fulfillment.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update order.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      branch_id:
        name: branch_id
        description: 'The <code>id</code> of an existing record in the branches table.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      currency_id:
        name: currency_id
        description: 'The <code>id</code> of an existing record in the currencies table.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      employee_id:
        name: employee_id
        description: 'The <code>id</code> of an existing record in the employees table.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      customer_id:
        name: customer_id
        description: 'The <code>id</code> of an existing record in the customers table.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      journal_id:
        name: journal_id
        description: ''
        required: false
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      journal_number:
        name: journal_number
        description: 'Must be at least 1.'
        required: true
        example: 45
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      book_code:
        name: book_code
        description: 'Must not be greater than 50 characters.'
        required: false
        example: qeopfuudtdsufvyvddqam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      invoice_number:
        name: invoice_number
        description: 'Must not be greater than 255 characters.'
        required: false
        example: niihfqcoynlazghdtqtqx
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      date:
        name: date
        description: 'Must be a valid date.'
        required: false
        example: '2025-09-30T13:03:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      time:
        name: time
        description: 'Must be a valid date in the format <code>H:i:s</code>.'
        required: false
        example: '13:03:30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      due_date:
        name: due_date
        description: 'Must be a valid date. Must be a date after or equal to <code>today</code>.'
        required: true
        example: '2106-10-30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      customer_email:
        name: customer_email
        description: 'Must be a valid email address. Must not be greater than 150 characters.'
        required: false
        example: carolyne.luettgen@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      licensed_operator:
        name: licensed_operator
        description: 'Must not be greater than 255 characters.'
        required: false
        example: fuudtdsufvyvddqamniih
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      cash_paid:
        name: cash_paid
        description: 'Must be at least 0. Must not be greater than 999999999.99.'
        required: false
        example: 6
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      checks_paid:
        name: checks_paid
        description: 'Must be at least 0. Must not be greater than 999999999.99.'
        required: false
        example: 16
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      allowed_discount:
        name: allowed_discount
        description: 'Must be at least 0. Must not be greater than 999999999.99.'
        required: false
        example: 3
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      discount_percentage:
        name: discount_percentage
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 15
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      total_without_tax:
        name: total_without_tax
        description: 'Must be at least 0. Must not be greater than 999999999.99.'
        required: false
        example: 24
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      tax_percentage:
        name: tax_percentage
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 13
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      tax_amount:
        name: tax_amount
        description: 'Must be at least 0. Must not be greater than 999999999.99.'
        required: false
        example: 12
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      total_amount:
        name: total_amount
        description: 'Must be at least 0. Must not be greater than 999999999.99.'
        required: false
        example: 1
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      remaining_balance:
        name: remaining_balance
        description: 'Must be at least 0. Must not be greater than 999999999.99.'
        required: false
        example: 25
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      exchange_rate:
        name: exchange_rate
        description: 'Must be at least 0.0001. Must not be greater than 999999.9999.'
        required: true
        example: 6
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      total_foreign:
        name: total_foreign
        description: 'Must be at least 0. Must not be greater than 999999999.9999.'
        required: false
        example: 8
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      total_local:
        name: total_local
        description: 'Must be at least 0. Must not be greater than 999999999.9999.'
        required: false
        example: 4
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_tax_inclusive:
        name: is_tax_inclusive
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      notes:
        name: notes
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: tqtqxbajwbpilpmufinll
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      items:
        name: items
        description: 'Must have at least 1 items.'
        required: true
        example:
          - []
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].item_id':
        name: 'items[].item_id'
        description: 'The <code>id</code> of an existing record in the items table.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].item_number':
        name: 'items[].item_number'
        description: 'Must not be greater than 100 characters.'
        required: false
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].item_name':
        name: 'items[].item_name'
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mniihfqcoynlazghdtqtq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].unit_name':
        name: 'items[].unit_name'
        description: 'Must not be greater than 100 characters.'
        required: false
        example: xbajwbpilpmufinllwloa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].description':
        name: 'items[].description'
        description: 'Must not be greater than 500 characters.'
        required: false
        example: 'A qui ducimus nihil laudantium nihil autem omnis.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].quantity':
        name: 'items[].quantity'
        description: 'Must be at least 0.0001. Must not be greater than 999999.9999.'
        required: true
        example: 17
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].unit_price':
        name: 'items[].unit_price'
        description: 'Must be at least 0. Must not be greater than 999999999.99.'
        required: true
        example: 24
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].discount_rate':
        name: 'items[].discount_rate'
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 21
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].discount_percentage':
        name: 'items[].discount_percentage'
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 15
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].discount_amount':
        name: 'items[].discount_amount'
        description: 'Must be at least 0. Must not be greater than 999999999.99.'
        required: false
        example: 9
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].tax_rate':
        name: 'items[].tax_rate'
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 3
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].total_foreign':
        name: 'items[].total_foreign'
        description: 'Must be at least 0. Must not be greater than 999999999.9999.'
        required: false
        example: 24
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].total_local':
        name: 'items[].total_local'
        description: 'Must be at least 0. Must not be greater than 999999999.9999.'
        required: false
        example: 2
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].total':
        name: 'items[].total'
        description: 'Must be at least 0. Must not be greater than 999999999.99.'
        required: false
        example: 25
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      branch_id: 17
      currency_id: 17
      employee_id: 17
      customer_id: 17
      journal_id: 17
      journal_number: 45
      book_code: qeopfuudtdsufvyvddqam
      invoice_number: niihfqcoynlazghdtqtqx
      date: '2025-09-30T13:03:30'
      time: '13:03:30'
      due_date: '2106-10-30'
      customer_email: carolyne.luettgen@example.org
      licensed_operator: fuudtdsufvyvddqamniih
      cash_paid: 6
      checks_paid: 16
      allowed_discount: 3
      discount_percentage: 15
      total_without_tax: 24
      tax_percentage: 13
      tax_amount: 12
      total_amount: 1
      remaining_balance: 25
      exchange_rate: 6
      total_foreign: 8
      total_local: 4
      is_tax_inclusive: false
      notes: tqtqxbajwbpilpmufinll
      items:
        -
          item_id: 17
          item_number: mqeopfuudtdsufvyvddqa
          item_name: mniihfqcoynlazghdtqtq
          unit_name: xbajwbpilpmufinllwloa
          description: 'A qui ducimus nihil laudantium nihil autem omnis.'
          quantity: 17
          unit_price: 24
          discount_rate: 21
          discount_percentage: 15
          discount_amount: 9
          tax_rate: 3
          total_foreign: 24
          total_local: 2
          total: 25
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/sales-management/incoming-orders/delete-order/{id}'
    metadata:
      groupName: 'Sales Management / Incoming Orders'
      groupDescription: |-

        APIs for managing incoming sales orders, including order processing, tracking, and fulfillment.
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage (soft delete).'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete order.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/sales-management/incoming-orders/restore-order/{id}'
    metadata:
      groupName: 'Sales Management / Incoming Orders'
      groupDescription: |-

        APIs for managing incoming sales orders, including order processing, tracking, and fulfillment.
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore a soft deleted incoming order.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the restore order.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/sales-management/incoming-orders/form-data/get-complete-data
    metadata:
      groupName: 'Sales Management / Incoming Orders'
      groupDescription: |-

        APIs for managing incoming sales orders, including order processing, tracking, and fulfillment.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get form data for creating incoming orders'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/sales-management/incoming-orders/form-data/get-complete-data could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/sales-management/incoming-orders/form-data/get-search-options
    metadata:
      groupName: 'Sales Management / Incoming Orders'
      groupDescription: |-

        APIs for managing incoming sales orders, including order processing, tracking, and fulfillment.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get advanced search form data'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/sales-management/incoming-orders/form-data/get-search-options could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/sales-management/incoming-orders/search/find-customers
    metadata:
      groupName: 'Sales Management / Incoming Orders'
      groupDescription: |-

        APIs for managing incoming sales orders, including order processing, tracking, and fulfillment.
      subgroup: ''
      subgroupDescription: ''
      title: 'Search customers by name or number'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/sales-management/incoming-orders/search/find-customers could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/sales-management/incoming-orders/search/find-items
    metadata:
      groupName: 'Sales Management / Incoming Orders'
      groupDescription: |-

        APIs for managing incoming sales orders, including order processing, tracking, and fulfillment.
      subgroup: ''
      subgroupDescription: ''
      title: 'Search items by name or number'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/sales-management/incoming-orders/search/find-items could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/sales-management/incoming-orders/external/get-live-exchange-rate
    metadata:
      groupName: 'Sales Management / Incoming Orders'
      groupDescription: |-

        APIs for managing incoming sales orders, including order processing, tracking, and fulfillment.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get live exchange rate for currency'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/sales-management/incoming-orders/external/get-live-exchange-rate could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
