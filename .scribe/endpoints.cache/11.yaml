## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Project Management / Projects'
description: |-

  APIs for managing projects, including creation, updates, search, and project lifecycle management.
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/projects/{id}'
    metadata:
      groupName: 'Project Management / Projects'
      groupDescription: |-

        APIs for managing projects, including creation, updates, search, and project lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the specified resource with comprehensive data.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the project.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/projects/consequatur could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/projects/{id}'
    metadata:
      groupName: 'Project Management / Projects'
      groupDescription: |-

        APIs for managing projects, including creation, updates, search, and project lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the project.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      company_id:
        name: company_id
        description: 'The <code>id</code> of an existing record in the companies table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      branch_id:
        name: branch_id
        description: 'The <code>id</code> of an existing record in the branches table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      fiscal_year_id:
        name: fiscal_year_id
        description: 'The <code>id</code> of an existing record in the fiscal_years table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      cost_center_id:
        name: cost_center_id
        description: 'The <code>id</code> of an existing record in the cost_centers table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      customer_id:
        name: customer_id
        description: 'The <code>id</code> of an existing record in the customers table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      currency_id:
        name: currency_id
        description: 'The <code>id</code> of an existing record in the currencies table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      currency_price:
        name: currency_price
        description: 'Must be at least 0.'
        required: false
        example: 73
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      include_vat:
        name: include_vat
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      project_number:
        name: project_number
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mniihfqcoynlazghdtqtq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Dolores dolorum amet iste laborum eius est dolor.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      project_value:
        name: project_value
        description: 'Must be at least 0.'
        required: false
        example: 12
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      manager_id:
        name: manager_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      project_manager_name:
        name: project_manager_name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: tdsufvyvddqamniihfqco
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date:
        name: start_date
        description: 'Must be a valid date.'
        required: false
        example: '2025-09-16T10:25:37'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'Must be a valid date. Must be a date after <code>start_date</code>.'
        required: false
        example: '2106-10-15'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: closed
        type: string
        enumValues:
          - draft
          - open
          - on-hold
          - cancelled
          - closed
        exampleWasSpecified: false
        nullable: false
        custom: []
      country_id:
        name: country_id
        description: 'The <code>id</code> of an existing record in the countries table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      notes:
        name: notes
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      customer_name:
        name: customer_name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      customer_email:
        name: customer_email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: false
        example: eloisa.harber@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      customer_phone:
        name: customer_phone
        description: 'Must not be greater than 20 characters.'
        required: false
        example: fqcoynlazghdtqtqx
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      licensed_operator:
        name: licensed_operator
        description: 'Must not be greater than 255 characters.'
        required: false
        example: bajwbpilpmufinllwloau
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      budget:
        name: budget
        description: 'Must be at least 0.'
        required: false
        example: 87
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      actual_cost:
        name: actual_cost
        description: 'Must be at least 0.'
        required: false
        example: 13
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      progress:
        name: progress
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 12
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      currency_price: 73
      include_vat: true
      project_number: mqeopfuudtdsufvyvddqa
      name: mniihfqcoynlazghdtqtq
      description: 'Dolores dolorum amet iste laborum eius est dolor.'
      project_value: 12
      project_manager_name: tdsufvyvddqamniihfqco
      start_date: '2025-09-16T10:25:37'
      end_date: '2106-10-15'
      status: closed
      notes: consequatur
      customer_name: mqeopfuudtdsufvyvddqa
      customer_email: eloisa.harber@example.com
      customer_phone: fqcoynlazghdtqtqx
      licensed_operator: bajwbpilpmufinllwloau
      budget: 87
      actual_cost: 13
      progress: 12
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/projects/{id}'
    metadata:
      groupName: 'Project Management / Projects'
      groupDescription: |-

        APIs for managing projects, including creation, updates, search, and project lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a project (soft delete)'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the project.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/projects/search
    metadata:
      groupName: 'Project Management / Projects'
      groupDescription: |-

        APIs for managing projects, including creation, updates, search, and project lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Advanced search for projects'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/projects/filter/by-field
    metadata:
      groupName: 'Project Management / Projects'
      groupDescription: |-

        APIs for managing projects, including creation, updates, search, and project lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get projects by specific field value for dynamic selection display'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/projects/filter/by-field could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/projects/fields/values
    metadata:
      groupName: 'Project Management / Projects'
      groupDescription: |-

        APIs for managing projects, including creation, updates, search, and project lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get unique values for a specific field for dropdown/selection'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/projects/fields/values could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/projects/fields/sortable
    metadata:
      groupName: 'Project Management / Projects'
      groupDescription: |-

        APIs for managing projects, including creation, updates, search, and project lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get sortable fields for projects'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/projects/fields/sortable could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/projects/sort
    metadata:
      groupName: 'Project Management / Projects'
      groupDescription: |-

        APIs for managing projects, including creation, updates, search, and project lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Sort projects by specific field with first/last functionality'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/projects/{id}/restore'
    metadata:
      groupName: 'Project Management / Projects'
      groupDescription: |-

        APIs for managing projects, including creation, updates, search, and project lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore a soft-deleted project'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the project.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/projects/{id}/force-delete'
    metadata:
      groupName: 'Project Management / Projects'
      groupDescription: |-

        APIs for managing projects, including creation, updates, search, and project lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Permanently delete a project (force delete)'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the project.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/projects/trashed/list
    metadata:
      groupName: 'Project Management / Projects'
      groupDescription: |-

        APIs for managing projects, including creation, updates, search, and project lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get trashed (soft-deleted) projects'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/projects/trashed/list could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/projects/customers/list
    metadata:
      groupName: 'Project Management / Projects'
      groupDescription: |-

        APIs for managing projects, including creation, updates, search, and project lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all customers for dropdown'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/projects/customers/list could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/projects/customers/{customerId}/data'
    metadata:
      groupName: 'Project Management / Projects'
      groupDescription: |-

        APIs for managing projects, including creation, updates, search, and project lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get customer data when customer is selected'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      customerId:
        name: customerId
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      customerId: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/projects/customers/consequatur/data could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/projects/currencies/list
    metadata:
      groupName: 'Project Management / Projects'
      groupDescription: |-

        APIs for managing projects, including creation, updates, search, and project lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all currencies for dropdown'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/projects/currencies/list could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/projects/employees/list
    metadata:
      groupName: 'Project Management / Projects'
      groupDescription: |-

        APIs for managing projects, including creation, updates, search, and project lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all employees/users for project manager dropdown'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/projects/employees/list could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/projects/countries/list
    metadata:
      groupName: 'Project Management / Projects'
      groupDescription: |-

        APIs for managing projects, including creation, updates, search, and project lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all countries for dropdown'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/projects/countries/list could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/projects/statuses/list
    metadata:
      groupName: 'Project Management / Projects'
      groupDescription: |-

        APIs for managing projects, including creation, updates, search, and project lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get project statuses for dropdown'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/projects/statuses/list could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/projects/calculate-vat
    metadata:
      groupName: 'Project Management / Projects'
      groupDescription: |-

        APIs for managing projects, including creation, updates, search, and project lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Calculate VAT for given price and company'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/projects/generate-code
    metadata:
      groupName: 'Project Management / Projects'
      groupDescription: |-

        APIs for managing projects, including creation, updates, search, and project lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Generate next project code'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/projects/generate-code could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
