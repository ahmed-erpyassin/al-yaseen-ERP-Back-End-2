## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Sales Management / Helpers'
description: |-

  Helper APIs for sales operations including customer lookup, item search, currency rates, and form data preparation.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/sales-management/helpers/customers
    metadata:
      groupName: 'Sales Management / Helpers'
      groupDescription: |-

        Helper APIs for sales operations including customer lookup, item search, currency rates, and form data preparation.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get customers for dropdown'
      description: 'Retrieve a list of active customers for dropdown/autocomplete fields with optional search functionality.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      search:
        name: search
        description: 'Optional search term to filter customers by name, code, or email.'
        required: false
        example: John
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      search: John
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "customer_number": "CUST-001",
                "customer_name": "John Doe",
                "email": "john@example.com",
                "licensed_operator": "Operator A",
                "phone": "+1234567890",
                "mobile": "+0987654321"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Error fetching customers: Database connection failed"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/sales-management/helpers/currencies
    metadata:
      groupName: 'Sales Management / Helpers'
      groupDescription: |-

        Helper APIs for sales operations including customer lookup, item search, currency rates, and form data preparation.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get currencies with exchange rates'
      description: 'Retrieve all available currencies with their current exchange rates for the company.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "code": "USD",
                "name": "US Dollar",
                "symbol": "$",
                "exchange_rate": 1.0
              },
              {
                "id": 2,
                "code": "EUR",
                "name": "Euro",
                "symbol": "â‚¬",
                "exchange_rate": 0.85
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Error fetching currencies: Database error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/sales-management/helpers/items
    metadata:
      groupName: 'Sales Management / Helpers'
      groupDescription: |-

        Helper APIs for sales operations including customer lookup, item search, currency rates, and form data preparation.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get items for dropdown with autocomplete'
      description: |-
        Retrieve active inventory items for dropdown/autocomplete fields with optional search functionality.
        Limited to 50 items for performance.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      search:
        name: search
        description: 'Optional search term to filter items by name, item number, or code.'
        required: false
        example: Laptop
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      search: Laptop
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "item_number": "ITEM-001",
                "name": "Laptop Dell XPS 15",
                "description": "High-performance laptop",
                "unit_id": 1,
                "first_sale_price": 1200.00,
                "second_sale_price": 1150.00,
                "third_sale_price": 1100.00,
                "unit": {
                  "id": 1,
                  "name": "Piece",
                  "symbol": "pc"
                }
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Error fetching items: Database error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/sales-management/helpers/units
    metadata:
      groupName: 'Sales Management / Helpers'
      groupDescription: |-

        Helper APIs for sales operations including customer lookup, item search, currency rates, and form data preparation.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get units for dropdown'
      description: 'Retrieve all active measurement units for dropdown fields.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "name": "Piece",
                "code": "PC",
                "symbol": "pc"
              },
              {
                "id": 2,
                "name": "Kilogram",
                "code": "KG",
                "symbol": "kg"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Error fetching units: Database error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/sales-management/helpers/tax-rates
    metadata:
      groupName: 'Sales Management / Helpers'
      groupDescription: |-

        Helper APIs for sales operations including customer lookup, item search, currency rates, and form data preparation.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get tax rates for dropdown'
      description: 'Retrieve all tax rates configured for the company.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "name": "Standard VAT",
                "code": "VAT",
                "rate": 15.0,
                "type": "vat"
              },
              {
                "id": 2,
                "name": "Zero Rated",
                "code": "ZERO",
                "rate": 0.0,
                "type": "vat"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Error fetching tax rates: Database error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/sales-management/helpers/company-vat-rate
    metadata:
      groupName: 'Sales Management / Helpers'
      groupDescription: |-

        Helper APIs for sales operations including customer lookup, item search, currency rates, and form data preparation.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get company VAT rate'
      description: "Retrieve the company's configured VAT and income tax rates."
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "vat_rate": 15.0,
              "income_tax_rate": 5.0
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Error fetching company VAT rate: Database error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/sales-management/helpers/currency-rate/{currencyId}'
    metadata:
      groupName: 'Sales Management / Helpers'
      groupDescription: |-

        Helper APIs for sales operations including customer lookup, item search, currency rates, and form data preparation.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get exchange rate for specific currency'
      description: 'Retrieve the latest exchange rate for a specific currency.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      currencyId:
        name: currencyId
        description: 'The ID of the currency.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      currencyId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "currency_id": 1,
              "exchange_rate": 1.0,
              "updated_at": "2025-09-30T10:30:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Error fetching currency rate: Database error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/sales-management/helpers/item-details/{itemId}'
    metadata:
      groupName: 'Sales Management / Helpers'
      groupDescription: |-

        Helper APIs for sales operations including customer lookup, item search, currency rates, and form data preparation.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get item details by ID'
      description: 'Retrieve detailed information about a specific item including unit and pricing.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      itemId:
        name: itemId
        description: 'The ID of the item.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      itemId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "id": 1,
              "item_number": "ITEM-001",
              "name": "Laptop Dell XPS 15",
              "description": "High-performance laptop",
              "unit_id": 1,
              "first_sale_price": 1200.00,
              "second_sale_price": 1150.00,
              "third_sale_price": 1100.00,
              "unit": {
                "id": 1,
                "name": "Piece",
                "symbol": "pc"
              }
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "message": "Item not found"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Error fetching item details: Database error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/sales-management/helpers/search-customers-invoice
    metadata:
      groupName: 'Sales Management / Helpers'
      groupDescription: |-

        Helper APIs for sales operations including customer lookup, item search, currency rates, and form data preparation.
      subgroup: ''
      subgroupDescription: ''
      title: 'Search customers for invoice creation'
      description: 'Search customers by number, name, or email for invoice/order creation with result limit.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      search:
        name: search
        description: 'Optional search term to filter customers.'
        required: false
        example: John
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'Optional maximum number of results (default: 10).'
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      search: John
      limit: 20
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "customer_number": "CUST-001",
                "name": "John Doe",
                "email": "john@example.com",
                "phone": "+1234567890",
                "licensed_operator": "Operator A"
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Error searching customers: Database error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/sales-management/helpers/search-items-invoice
    metadata:
      groupName: 'Sales Management / Helpers'
      groupDescription: |-

        Helper APIs for sales operations including customer lookup, item search, currency rates, and form data preparation.
      subgroup: ''
      subgroupDescription: ''
      title: 'Search items for invoice creation'
      description: 'Search items by number or name for invoice/order creation with formatted response including pricing.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      search:
        name: search
        description: 'Optional search term to filter items by number or name.'
        required: false
        example: Laptop
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'Optional maximum number of results (default: 10).'
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      search: Laptop
      limit: 20
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "item_number": "ITEM-001",
                "item_name": "Laptop Dell XPS 15",
                "unit": "Piece",
                "unit_price": 1200.00,
                "category": "Electronics",
                "supplier": "Dell Inc."
              }
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Error searching items: Database error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/sales-management/helpers/licensed-operators
    metadata:
      groupName: 'Sales Management / Helpers'
      groupDescription: |-

        Helper APIs for sales operations including customer lookup, item search, currency rates, and form data preparation.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get licensed operators for dropdown'
      description: 'Retrieve a list of unique licensed operators from the customers database for dropdown selection.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              "Operator A",
              "Operator B",
              "Operator C"
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Error fetching licensed operators: Database error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/sales-management/helpers/customer-details/{customerId}'
    metadata:
      groupName: 'Sales Management / Helpers'
      groupDescription: |-

        Helper APIs for sales operations including customer lookup, item search, currency rates, and form data preparation.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get customer details by ID'
      description: 'Retrieve complete customer information by ID for auto-population in forms.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      customerId:
        name: customerId
        description: 'The ID of the customer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      customerId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "id": 1,
              "customer_number": "CUST-001",
              "name": "John Doe",
              "email": "john@example.com",
              "phone": "+1234567890",
              "licensed_operator": "Operator A",
              "address_one": "123 Main St",
              "address_two": "Suite 100"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "error": "Customer not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Error fetching customer details: Database error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/sales-management/helpers/item-details-invoice/{itemId}'
    metadata:
      groupName: 'Sales Management / Helpers'
      groupDescription: |-

        Helper APIs for sales operations including customer lookup, item search, currency rates, and form data preparation.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get item details for invoice creation'
      description: 'Retrieve complete item information including pricing, units, category, and supplier for invoice/order creation.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      itemId:
        name: itemId
        description: 'The ID of the item.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      itemId: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "id": 1,
              "item_number": "ITEM-001",
              "item_name": "Laptop Dell XPS 15",
              "unit": "Piece",
              "first_sale_price": 1200.00,
              "second_sale_price": 1150.00,
              "third_sale_price": 1100.00,
              "category": "Electronics",
              "supplier": "Dell Inc.",
              "available_units": [
                {
                  "id": 1,
                  "name": "Piece",
                  "code": "PC",
                  "symbol": "pc"
                }
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "error": "Item not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Error fetching item details: Database error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/sales-management/helpers/live-currency-rate/{currencyId}'
    metadata:
      groupName: 'Sales Management / Helpers'
      groupDescription: |-

        Helper APIs for sales operations including customer lookup, item search, currency rates, and form data preparation.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get live currency rate with tax calculation'
      description: |-
        Fetch real-time exchange rate from external API with optional tax rates.
        Uses exchangerate-api.com for live rates.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      currencyId:
        name: currencyId
        description: 'The ID of the currency.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      currencyId: 2
    queryParameters:
      include_tax:
        name: include_tax
        description: 'Optional flag to include tax rates in response.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      include_tax: true
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": {
              "currency_id": 2,
              "currency_code": "EUR",
              "currency_name": "Euro",
              "exchange_rate": 0.85,
              "tax_rates": [
                {
                  "id": 1,
                  "name": "Standard VAT",
                  "code": "VAT",
                  "rate": 15.0
                }
              ],
              "updated_at": "2025-09-30T10:30:00.000000Z"
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "success": false,
            "error": "Currency not found."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "error": "An error occurred while fetching live currency rate.",
            "message": "API timeout"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
