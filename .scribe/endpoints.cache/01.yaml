## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Inventory Management / Inventory Items'
description: |-

  APIs for managing inventory items, stock levels, and warehouse operations.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/inventory-items/survey-all
    metadata:
      groupName: 'Inventory Management / Inventory Items'
      groupDescription: |-

        APIs for managing inventory items, stock levels, and warehouse operations.
      subgroup: ''
      subgroupDescription: ''
      title: 'List Inventory Items'
      description: 'Retrieve a paginated list of inventory items with filtering and search capabilities.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      active:
        name: active
        description: 'Filter by active status.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      category_id:
        name: category_id
        description: 'Filter by category ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      supplier_id:
        name: supplier_id
        description: 'Filter by supplier ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Search across item names and descriptions.'
        required: false
        example: laptop
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort_by:
        name: sort_by
        description: 'Field to sort by.'
        required: false
        example: name
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort_direction:
        name: sort_direction
        description: 'Sort direction (asc/desc).'
        required: false
        example: asc
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of items per page (default: 15).'
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      active: true
      category_id: 1
      supplier_id: 1
      search: laptop
      sort_by: name
      sort_direction: asc
      per_page: 20
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "data": [
              {
                "id": 1,
                "name": "Laptop Dell XPS 13",
                "sku": "DELL-XPS-13",
                "category": "Electronics",
                "quantity": 50,
                "unit_price": 1200.00,
                "supplier": "Dell Inc.",
                "active": true,
                "created_at": "2024-01-01T00:00:00.000000Z"
              }
            ],
            "message": "Inventory items retrieved successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "success": false,
            "message": "Error retrieving inventory items: Database connection failed"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/inventory-items/register-inventory
    metadata:
      groupName: 'Inventory Management / Inventory Items'
      groupDescription: |-

        APIs for managing inventory items, stock levels, and warehouse operations.
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created inventory item.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      company_id:
        name: company_id
        description: 'The <code>id</code> of an existing record in the companies table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      item_number:
        name: item_number
        description: 'Must not be greater than 255 characters.'
        required: true
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      item_name_ar:
        name: item_name_ar
        description: 'Must not be greater than 255 characters.'
        required: true
        example: mniihfqcoynlazghdtqtq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      item_name_en:
        name: item_name_en
        description: 'Must not be greater than 255 characters.'
        required: false
        example: xbajwbpilpmufinllwloa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      barcode:
        name: barcode
        description: 'Must not be greater than 255 characters.'
        required: false
        example: uydlsmsjuryvojcybzvrb
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      model:
        name: model
        description: 'Must not be greater than 255 characters.'
        required: false
        example: yickznkygloigmkwxphlv
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      unit:
        name: unit
        description: 'Must not be greater than 50 characters.'
        required: true
        example: azjrcnfbaqywuxhgjjmzu
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      quantity:
        name: quantity
        description: 'Must be at least 0.'
        required: false
        example: 82
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      unit_price:
        name: unit_price
        description: 'Must be at least 0.'
        required: false
        example: 34
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      minimum_limit:
        name: minimum_limit
        description: 'Must be at least 0.'
        required: false
        example: 71
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      reorder_limit:
        name: reorder_limit
        description: 'Must be at least 0.'
        required: false
        example: 4
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      notes:
        name: notes
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      active:
        name: active
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      company_id: consequatur
      item_number: mqeopfuudtdsufvyvddqa
      item_name_ar: mniihfqcoynlazghdtqtq
      item_name_en: xbajwbpilpmufinllwloa
      barcode: uydlsmsjuryvojcybzvrb
      model: yickznkygloigmkwxphlv
      unit: azjrcnfbaqywuxhgjjmzu
      quantity: 82
      unit_price: 34
      minimum_limit: 71
      reorder_limit: 4
      notes: consequatur
      active: false
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/inventory-items/examine-inventory/{id}'
    metadata:
      groupName: 'Inventory Management / Inventory Items'
      groupDescription: |-

        APIs for managing inventory items, stock levels, and warehouse operations.
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified inventory item.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the examine inventory.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/inventory-items/examine-inventory/consequatur could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/inventory-items/modify-inventory/{id}'
    metadata:
      groupName: 'Inventory Management / Inventory Items'
      groupDescription: |-

        APIs for managing inventory items, stock levels, and warehouse operations.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified inventory item.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the modify inventory.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      company_id:
        name: company_id
        description: 'The <code>id</code> of an existing record in the companies table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      item_number:
        name: item_number
        description: 'Must not be greater than 255 characters.'
        required: true
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      item_name_ar:
        name: item_name_ar
        description: 'Must not be greater than 255 characters.'
        required: true
        example: mniihfqcoynlazghdtqtq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      item_name_en:
        name: item_name_en
        description: 'Must not be greater than 255 characters.'
        required: false
        example: xbajwbpilpmufinllwloa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      barcode:
        name: barcode
        description: 'Must not be greater than 255 characters.'
        required: false
        example: uydlsmsjuryvojcybzvrb
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      model:
        name: model
        description: 'Must not be greater than 255 characters.'
        required: false
        example: yickznkygloigmkwxphlv
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      unit:
        name: unit
        description: 'Must not be greater than 50 characters.'
        required: true
        example: azjrcnfbaqywuxhgjjmzu
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      quantity:
        name: quantity
        description: 'Must be at least 0.'
        required: false
        example: 82
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      unit_price:
        name: unit_price
        description: 'Must be at least 0.'
        required: false
        example: 34
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      minimum_limit:
        name: minimum_limit
        description: 'Must be at least 0.'
        required: false
        example: 71
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      reorder_limit:
        name: reorder_limit
        description: 'Must be at least 0.'
        required: false
        example: 4
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      notes:
        name: notes
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      active:
        name: active
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      company_id: consequatur
      item_number: mqeopfuudtdsufvyvddqa
      item_name_ar: mniihfqcoynlazghdtqtq
      item_name_en: xbajwbpilpmufinllwloa
      barcode: uydlsmsjuryvojcybzvrb
      model: yickznkygloigmkwxphlv
      unit: azjrcnfbaqywuxhgjjmzu
      quantity: 82
      unit_price: 34
      minimum_limit: 71
      reorder_limit: 4
      notes: consequatur
      active: true
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/inventory-items/remove-inventory/{id}'
    metadata:
      groupName: 'Inventory Management / Inventory Items'
      groupDescription: |-

        APIs for managing inventory items, stock levels, and warehouse operations.
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified inventory item.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the remove inventory.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/inventory-items/first-inventory
    metadata:
      groupName: 'Inventory Management / Inventory Items'
      groupDescription: |-

        APIs for managing inventory items, stock levels, and warehouse operations.
      subgroup: ''
      subgroupDescription: ''
      title: '! Get first inventory item.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/inventory-items/first-inventory could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/inventory-items/last-inventory
    metadata:
      groupName: 'Inventory Management / Inventory Items'
      groupDescription: |-

        APIs for managing inventory items, stock levels, and warehouse operations.
      subgroup: ''
      subgroupDescription: ''
      title: '! Get last inventory item.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/inventory-items/last-inventory could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/inventory-items/low-stock-items
    metadata:
      groupName: 'Inventory Management / Inventory Items'
      groupDescription: |-

        APIs for managing inventory items, stock levels, and warehouse operations.
      subgroup: ''
      subgroupDescription: ''
      title: '! Get low stock items.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/inventory-items/low-stock-items could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/inventory-items/reorder-required-items
    metadata:
      groupName: 'Inventory Management / Inventory Items'
      groupDescription: |-

        APIs for managing inventory items, stock levels, and warehouse operations.
      subgroup: ''
      subgroupDescription: ''
      title: '! Get items that need reordering.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/inventory-items/reorder-required-items could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/inventory-items/deleted-inventory
    metadata:
      groupName: 'Inventory Management / Inventory Items'
      groupDescription: |-

        APIs for managing inventory items, stock levels, and warehouse operations.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get trashed (soft deleted) inventory items.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/inventory-items/deleted-inventory could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/inventory-items/{id}/restore-inventory'
    metadata:
      groupName: 'Inventory Management / Inventory Items'
      groupDescription: |-

        APIs for managing inventory items, stock levels, and warehouse operations.
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore a soft deleted inventory item.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the inventory item.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/inventory-items/{id}/permanently-delete'
    metadata:
      groupName: 'Inventory Management / Inventory Items'
      groupDescription: |-

        APIs for managing inventory items, stock levels, and warehouse operations.
      subgroup: ''
      subgroupDescription: ''
      title: 'Permanently delete an inventory item (force delete).'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the inventory item.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
