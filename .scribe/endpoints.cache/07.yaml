## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Inventory Management / Barcode Types'
description: |-

  APIs for managing barcode types, validation, and barcode generation.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/barcode-types/options
    metadata:
      groupName: 'Inventory Management / Barcode Types'
      groupDescription: |-

        APIs for managing barcode types, validation, and barcode generation.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get barcode type options for dropdown.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/barcode-types/options could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/barcode-types/supported
    metadata:
      groupName: 'Inventory Management / Barcode Types'
      groupDescription: |-

        APIs for managing barcode types, validation, and barcode generation.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get supported barcode types from Milon library.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/barcode-types/supported could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/barcode-types/{id}'
    metadata:
      groupName: 'Inventory Management / Barcode Types'
      groupDescription: |-

        APIs for managing barcode types, validation, and barcode generation.
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified barcode type.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the barcode type.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/barcode-types/consequatur could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/barcode-types/validate
    metadata:
      groupName: 'Inventory Management / Barcode Types'
      groupDescription: |-

        APIs for managing barcode types, validation, and barcode generation.
      subgroup: ''
      subgroupDescription: ''
      title: 'Validate a barcode against a specific type.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      barcode:
        name: barcode
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      barcode_type_id:
        name: barcode_type_id
        description: 'The <code>id</code> of an existing record in the barcode_types table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      barcode: consequatur
      barcode_type_id: consequatur
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/barcode-types/generate
    metadata:
      groupName: 'Inventory Management / Barcode Types'
      groupDescription: |-

        APIs for managing barcode types, validation, and barcode generation.
      subgroup: ''
      subgroupDescription: ''
      title: 'Generate barcode image (PNG or SVG).'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      barcode:
        name: barcode
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      barcode_type_id:
        name: barcode_type_id
        description: 'The <code>id</code> of an existing record in the barcode_types table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      width:
        name: width
        description: 'Must be at least 1. Must not be greater than 10.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      height:
        name: height
        description: 'Must be at least 10. Must not be greater than 100.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      format:
        name: format
        description: ''
        required: false
        example: svg
        type: string
        enumValues:
          - png
          - svg
        exampleWasSpecified: false
        nullable: true
        custom: []
      color:
        name: color
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      barcode: consequatur
      barcode_type_id: consequatur
      width: 5
      height: 16
      format: svg
      color: consequatur
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/barcode-types/generate-svg
    metadata:
      groupName: 'Inventory Management / Barcode Types'
      groupDescription: |-

        APIs for managing barcode types, validation, and barcode generation.
      subgroup: ''
      subgroupDescription: ''
      title: 'Generate SVG barcode specifically.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      barcode:
        name: barcode
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      barcode_type_id:
        name: barcode_type_id
        description: 'The <code>id</code> of an existing record in the barcode_types table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      width:
        name: width
        description: 'Must be at least 1. Must not be greater than 10.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      height:
        name: height
        description: 'Must be at least 10. Must not be greater than 100.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      color:
        name: color
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      barcode: consequatur
      barcode_type_id: consequatur
      width: 5
      height: 16
      color: consequatur
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
