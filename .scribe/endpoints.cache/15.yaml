## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Project Management / Tasks'
description: |-

  APIs for managing project tasks, including creation, updates, assignments, and task lifecycle management.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/project-tasks/fetch-all
    metadata:
      groupName: 'Project Management / Tasks'
      groupDescription: |-

        APIs for managing project tasks, including creation, updates, assignments, and task lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of tasks.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/project-tasks/fetch-all could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/project-tasks/generate-new
    metadata:
      groupName: 'Project Management / Tasks'
      groupDescription: |-

        APIs for managing project tasks, including creation, updates, assignments, and task lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created task.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      project_id:
        name: project_id
        description: 'The <code>id</code> of an existing record in the projects table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task_name:
        name: task_name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      assigned_to:
        name: assigned_to
        description: 'The <code>id</code> of an existing record in the employees table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      due_date:
        name: due_date
        description: 'Must be a valid date. Must be a date after or equal to <code>today</code>.'
        required: true
        example: '2106-10-30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: in_progress
        type: string
        enumValues:
          - to_do
          - in_progress
          - done
          - blocked
        exampleWasSpecified: false
        nullable: false
        custom: []
      milestone_id:
        name: milestone_id
        description: 'The <code>id</code> of an existing record in the project_milestones table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Dolores dolorum amet iste laborum eius est dolor.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      notes:
        name: notes
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      priority:
        name: priority
        description: ''
        required: false
        example: medium
        type: string
        enumValues:
          - low
          - medium
          - high
          - urgent
        exampleWasSpecified: false
        nullable: true
        custom: []
      start_date:
        name: start_date
        description: 'Must be a valid date. Must be a date before or equal to <code>due_date</code>.'
        required: false
        example: '2020-01-26'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      estimated_hours:
        name: estimated_hours
        description: 'Must be at least 1. Must not be greater than 1000.'
        required: false
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      actual_hours:
        name: actual_hours
        description: 'Must be at least 0. Must not be greater than 1000.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      progress:
        name: progress
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 5
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      records:
        name: records
        description: 'Must be a valid URL. Must not be greater than 500 characters.'
        required: false
        example:
          - opfuudtdsufvyvddqamni
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      company_id:
        name: company_id
        description: 'The <code>id</code> of an existing record in the companies table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      branch_id:
        name: branch_id
        description: 'The <code>id</code> of an existing record in the branches table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      fiscal_year_id:
        name: fiscal_year_id
        description: 'The <code>id</code> of an existing record in the fiscal_years table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      project_id: consequatur
      task_name: mqeopfuudtdsufvyvddqa
      assigned_to: consequatur
      due_date: '2106-10-30'
      status: in_progress
      title: mqeopfuudtdsufvyvddqa
      description: 'Dolores dolorum amet iste laborum eius est dolor.'
      notes: consequatur
      priority: medium
      start_date: '2020-01-26'
      estimated_hours: 13
      actual_hours: 16
      progress: 5
      records:
        - opfuudtdsufvyvddqamni
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/project-tasks/inspect/{id}'
    metadata:
      groupName: 'Project Management / Tasks'
      groupDescription: |-

        APIs for managing project tasks, including creation, updates, assignments, and task lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified task.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the inspect.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/project-tasks/inspect/consequatur could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/project-tasks/update-existing/{id}'
    metadata:
      groupName: 'Project Management / Tasks'
      groupDescription: |-

        APIs for managing project tasks, including creation, updates, assignments, and task lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified task.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update existing.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      project_id:
        name: project_id
        description: 'The <code>id</code> of an existing record in the projects table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task_name:
        name: task_name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: vmqeopfuudtdsufvyvddq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      assigned_to:
        name: assigned_to
        description: 'The <code>id</code> of an existing record in the employees table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      due_date:
        name: due_date
        description: 'Must be a valid date.'
        required: false
        example: '2025-09-30T13:03:28'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: blocked
        type: string
        enumValues:
          - to_do
          - in_progress
          - done
          - blocked
        exampleWasSpecified: false
        nullable: false
        custom: []
      milestone_id:
        name: milestone_id
        description: 'The <code>id</code> of an existing record in the project_milestones table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: false
        example: amniihfqcoynlazghdtqt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Dolores dolorum amet iste laborum eius est dolor.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      notes:
        name: notes
        description: ''
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      priority:
        name: priority
        description: ''
        required: false
        example: urgent
        type: string
        enumValues:
          - low
          - medium
          - high
          - urgent
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date:
        name: start_date
        description: 'Must be a valid date.'
        required: false
        example: '2025-09-30T13:03:28'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      estimated_hours:
        name: estimated_hours
        description: 'Must be at least 1. Must not be greater than 1000.'
        required: false
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      actual_hours:
        name: actual_hours
        description: 'Must be at least 0. Must not be greater than 1000.'
        required: false
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      progress:
        name: progress
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 5
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      records:
        name: records
        description: 'Must be a valid URL. Must not be greater than 500 characters.'
        required: false
        example:
          - opfuudtdsufvyvddqamni
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      task_name: vmqeopfuudtdsufvyvddq
      due_date: '2025-09-30T13:03:28'
      status: blocked
      title: amniihfqcoynlazghdtqt
      description: 'Dolores dolorum amet iste laborum eius est dolor.'
      notes: consequatur
      priority: urgent
      start_date: '2025-09-30T13:03:28'
      estimated_hours: 13
      actual_hours: 16
      progress: 5
      records:
        - opfuudtdsufvyvddqamni
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/project-tasks/delete-item/{id}'
    metadata:
      groupName: 'Project Management / Tasks'
      groupDescription: |-

        APIs for managing project tasks, including creation, updates, assignments, and task lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified task.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete item.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/project-tasks/advanced-search
    metadata:
      groupName: 'Project Management / Tasks'
      groupDescription: |-

        APIs for managing project tasks, including creation, updates, assignments, and task lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Advanced search for tasks.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/project-tasks/advanced-search could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/project-tasks/filter-by-field
    metadata:
      groupName: 'Project Management / Tasks'
      groupDescription: |-

        APIs for managing project tasks, including creation, updates, assignments, and task lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get tasks filtered by specific field value (Dynamic Field Selection).'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/project-tasks/filter-by-field could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/project-tasks/assigned-to-me
    metadata:
      groupName: 'Project Management / Tasks'
      groupDescription: |-

        APIs for managing project tasks, including creation, updates, assignments, and task lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get tasks assigned to the current user (My Tasks).'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/project-tasks/assigned-to-me could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/project-tasks/due-today
    metadata:
      groupName: 'Project Management / Tasks'
      groupDescription: |-

        APIs for managing project tasks, including creation, updates, assignments, and task lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get tasks due today (Daily Due Date).'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/project-tasks/due-today could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/project-tasks/overdue-tasks
    metadata:
      groupName: 'Project Management / Tasks'
      groupDescription: |-

        APIs for managing project tasks, including creation, updates, assignments, and task lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get overdue tasks (tasks past due date but not completed).'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/project-tasks/overdue-tasks could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/project-tasks/sortable-fields
    metadata:
      groupName: 'Project Management / Tasks'
      groupDescription: |-

        APIs for managing project tasks, including creation, updates, assignments, and task lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get sortable fields for tasks.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/project-tasks/sortable-fields could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/project-tasks/apply-sort
    metadata:
      groupName: 'Project Management / Tasks'
      groupDescription: |-

        APIs for managing project tasks, including creation, updates, assignments, and task lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Sort tasks by specified field and order.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/project-tasks/employee-options
    metadata:
      groupName: 'Project Management / Tasks'
      groupDescription: |-

        APIs for managing project tasks, including creation, updates, assignments, and task lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get employees for assignment dropdown.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/project-tasks/employee-options could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/project-tasks/status-options
    metadata:
      groupName: 'Project Management / Tasks'
      groupDescription: |-

        APIs for managing project tasks, including creation, updates, assignments, and task lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get task status options.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/project-tasks/status-options could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/project-tasks/priority-options
    metadata:
      groupName: 'Project Management / Tasks'
      groupDescription: |-

        APIs for managing project tasks, including creation, updates, assignments, and task lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get task priority options.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/project-tasks/priority-options could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/project-tasks/by-project/{projectId}'
    metadata:
      groupName: 'Project Management / Tasks'
      groupDescription: |-

        APIs for managing project tasks, including creation, updates, assignments, and task lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get tasks for a specific project.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      projectId:
        name: projectId
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      projectId: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/project-tasks/by-project/consequatur could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/project-tasks/{taskId}/upload-document'
    metadata:
      groupName: 'Project Management / Tasks'
      groupDescription: |-

        APIs for managing project tasks, including creation, updates, assignments, and task lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Upload document for a task.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      taskId:
        name: taskId
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      taskId: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/project-tasks/{taskId}/task-documents'
    metadata:
      groupName: 'Project Management / Tasks'
      groupDescription: |-

        APIs for managing project tasks, including creation, updates, assignments, and task lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get documents for a task.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      taskId:
        name: taskId
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      taskId: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/project-tasks/consequatur/task-documents could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/project-tasks/document/{documentId}/remove'
    metadata:
      groupName: 'Project Management / Tasks'
      groupDescription: |-

        APIs for managing project tasks, including creation, updates, assignments, and task lifecycle management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a task document.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      documentId:
        name: documentId
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      documentId: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
