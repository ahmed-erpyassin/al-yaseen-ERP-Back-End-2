## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Purchase Management / Outgoing Orders'
description: |-

  APIs for managing outgoing purchase orders, including order creation, tracking, and supplier management.
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/purchase/outgoing-orders/list
    metadata:
      groupName: 'Purchase Management / Outgoing Orders'
      groupDescription: |-

        APIs for managing outgoing purchase orders, including order creation, tracking, and supplier management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of the resource.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/purchase/outgoing-orders/list could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/purchase/outgoing-orders/create
    metadata:
      groupName: 'Purchase Management / Outgoing Orders'
      groupDescription: |-

        APIs for managing outgoing purchase orders, including order creation, tracking, and supplier management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created resource in storage.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      customer_id:
        name: customer_id
        description: 'The <code>id</code> of an existing record in the customers table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      currency_id:
        name: currency_id
        description: 'The <code>id</code> of an existing record in the currencies table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      employee_id:
        name: employee_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      journal_id:
        name: journal_id
        description: 'The <code>id</code> of an existing record in the journals table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      customer_number:
        name: customer_number
        description: 'Must not be greater than 50 characters.'
        required: false
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      customer_name:
        name: customer_name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mniihfqcoynlazghdtqtq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      customer_email:
        name: customer_email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: false
        example: ablanda@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      customer_mobile:
        name: customer_mobile
        description: 'Must not be greater than 20 characters.'
        required: false
        example: wbpilpmufinllwloa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      licensed_operator:
        name: licensed_operator
        description: 'Must not be greater than 255 characters.'
        required: false
        example: uydlsmsjuryvojcybzvrb
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      date:
        name: date
        description: 'Must be a valid date.'
        required: false
        example: '2025-09-30T13:03:29'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      time:
        name: time
        description: 'Must be a valid date in the format <code>H:i:s</code>.'
        required: false
        example: '13:03:29'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      due_date:
        name: due_date
        description: 'Must be a valid date. Must be a date after or equal to <code>date</code>.'
        required: false
        example: '2106-10-30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      exchange_rate:
        name: exchange_rate
        description: 'Must be at least 0.'
        required: false
        example: 45
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      cash_paid:
        name: cash_paid
        description: 'Must be at least 0.'
        required: false
        example: 56
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      checks_paid:
        name: checks_paid
        description: 'Must be at least 0.'
        required: false
        example: 16
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      allowed_discount:
        name: allowed_discount
        description: 'Must be at least 0.'
        required: false
        example: 50
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      discount_percentage:
        name: discount_percentage
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 16
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      discount_amount:
        name: discount_amount
        description: 'Must be at least 0.'
        required: false
        example: 19
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      total_without_tax:
        name: total_without_tax
        description: 'Must be at least 0.'
        required: false
        example: 70
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      tax_percentage:
        name: tax_percentage
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 20
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      tax_amount:
        name: tax_amount
        description: 'Must be at least 0.'
        required: false
        example: 12
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_tax_inclusive:
        name: is_tax_inclusive
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      total_amount:
        name: total_amount
        description: 'Must be at least 0.'
        required: false
        example: 66
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      remaining_balance:
        name: remaining_balance
        description: 'Must be at least 0.'
        required: false
        example: 13
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      total_foreign:
        name: total_foreign
        description: 'Must be at least 0.'
        required: false
        example: 65
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      total_local:
        name: total_local
        description: 'Must be at least 0.'
        required: false
        example: 72
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      notes:
        name: notes
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: fvyvddqamniihfqcoynla
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      items:
        name: items
        description: 'Must have at least 1 items.'
        required: true
        example:
          - []
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].item_id':
        name: 'items[].item_id'
        description: 'The <code>id</code> of an existing record in the items table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].item_number':
        name: 'items[].item_number'
        description: 'Must not be greater than 50 characters.'
        required: false
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].item_name':
        name: 'items[].item_name'
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mniihfqcoynlazghdtqtq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].unit':
        name: 'items[].unit'
        description: 'Must not be greater than 50 characters.'
        required: false
        example: xbajwbpilpmufinllwloa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].quantity':
        name: 'items[].quantity'
        description: 'Must be at least 0.01.'
        required: true
        example: 72
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].unit_price':
        name: 'items[].unit_price'
        description: 'Must be at least 0.'
        required: true
        example: 87
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].discount_percentage':
        name: 'items[].discount_percentage'
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 4
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].discount_amount':
        name: 'items[].discount_amount'
        description: 'Must be at least 0.'
        required: false
        example: 40
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].tax_rate':
        name: 'items[].tax_rate'
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 18
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].description':
        name: 'items[].description'
        description: 'Must not be greater than 500 characters.'
        required: false
        example: 'Nihil autem omnis cum molestiae vel.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].total_without_tax':
        name: 'items[].total_without_tax'
        description: 'Must be at least 0.'
        required: false
        example: 51
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].total_foreign':
        name: 'items[].total_foreign'
        description: 'Must be at least 0.'
        required: false
        example: 32
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].total_local':
        name: 'items[].total_local'
        description: 'Must be at least 0.'
        required: false
        example: 7
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].total':
        name: 'items[].total'
        description: 'Must be at least 0.'
        required: false
        example: 86
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      customer_id: consequatur
      customer_number: mqeopfuudtdsufvyvddqa
      customer_name: mniihfqcoynlazghdtqtq
      customer_email: ablanda@example.org
      customer_mobile: wbpilpmufinllwloa
      licensed_operator: uydlsmsjuryvojcybzvrb
      date: '2025-09-30T13:03:29'
      time: '13:03:29'
      due_date: '2106-10-30'
      exchange_rate: 45
      cash_paid: 56
      checks_paid: 16
      allowed_discount: 50
      discount_percentage: 16
      discount_amount: 19
      total_without_tax: 70
      tax_percentage: 20
      tax_amount: 12
      is_tax_inclusive: false
      total_amount: 66
      remaining_balance: 13
      total_foreign: 65
      total_local: 72
      notes: fvyvddqamniihfqcoynla
      items:
        -
          item_id: consequatur
          item_number: mqeopfuudtdsufvyvddqa
          item_name: mniihfqcoynlazghdtqtq
          unit: xbajwbpilpmufinllwloa
          quantity: 72
          unit_price: 87
          discount_percentage: 4
          discount_amount: 40
          tax_rate: 18
          description: 'Nihil autem omnis cum molestiae vel.'
          total_without_tax: 51
          total_foreign: 32
          total_local: 7
          total: 86
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/purchase/outgoing-orders/details/{id}'
    metadata:
      groupName: 'Purchase Management / Outgoing Orders'
      groupDescription: |-

        APIs for managing outgoing purchase orders, including order creation, tracking, and supplier management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Show the specified resource.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the detail.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/purchase/outgoing-orders/details/consequatur could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/purchase/outgoing-orders/update/{id}'
    metadata:
      groupName: 'Purchase Management / Outgoing Orders'
      groupDescription: |-

        APIs for managing outgoing purchase orders, including order creation, tracking, and supplier management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the update.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      customer_id:
        name: customer_id
        description: 'The <code>id</code> of an existing record in the customers table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      currency_id:
        name: currency_id
        description: 'The <code>id</code> of an existing record in the currencies table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      employee_id:
        name: employee_id
        description: 'The <code>id</code> of an existing record in the users table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      journal_id:
        name: journal_id
        description: 'The <code>id</code> of an existing record in the journals table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      customer_number:
        name: customer_number
        description: 'Must not be greater than 50 characters.'
        required: false
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      customer_name:
        name: customer_name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mniihfqcoynlazghdtqtq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      customer_email:
        name: customer_email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: false
        example: ablanda@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      customer_mobile:
        name: customer_mobile
        description: 'Must not be greater than 20 characters.'
        required: false
        example: wbpilpmufinllwloa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      licensed_operator:
        name: licensed_operator
        description: 'Must not be greater than 255 characters.'
        required: false
        example: uydlsmsjuryvojcybzvrb
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      date:
        name: date
        description: 'Must be a valid date.'
        required: false
        example: '2025-09-30T13:03:29'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      time:
        name: time
        description: 'Must be a valid date in the format <code>H:i:s</code>.'
        required: false
        example: '13:03:29'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      due_date:
        name: due_date
        description: 'Must be a valid date. Must be a date after or equal to <code>date</code>.'
        required: false
        example: '2106-10-30'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      exchange_rate:
        name: exchange_rate
        description: 'Must be at least 0.'
        required: false
        example: 45
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      cash_paid:
        name: cash_paid
        description: 'Must be at least 0.'
        required: false
        example: 56
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      checks_paid:
        name: checks_paid
        description: 'Must be at least 0.'
        required: false
        example: 16
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      allowed_discount:
        name: allowed_discount
        description: 'Must be at least 0.'
        required: false
        example: 50
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      discount_percentage:
        name: discount_percentage
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 16
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      discount_amount:
        name: discount_amount
        description: 'Must be at least 0.'
        required: false
        example: 19
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      total_without_tax:
        name: total_without_tax
        description: 'Must be at least 0.'
        required: false
        example: 70
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      tax_percentage:
        name: tax_percentage
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 20
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      tax_amount:
        name: tax_amount
        description: 'Must be at least 0.'
        required: false
        example: 12
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      is_tax_inclusive:
        name: is_tax_inclusive
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      total_amount:
        name: total_amount
        description: 'Must be at least 0.'
        required: false
        example: 66
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      remaining_balance:
        name: remaining_balance
        description: 'Must be at least 0.'
        required: false
        example: 13
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      total_foreign:
        name: total_foreign
        description: 'Must be at least 0.'
        required: false
        example: 65
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      total_local:
        name: total_local
        description: 'Must be at least 0.'
        required: false
        example: 72
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      notes:
        name: notes
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: fvyvddqamniihfqcoynla
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      items:
        name: items
        description: 'Must have at least 1 items.'
        required: true
        example:
          - []
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].item_id':
        name: 'items[].item_id'
        description: 'The <code>id</code> of an existing record in the items table.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].item_number':
        name: 'items[].item_number'
        description: 'Must not be greater than 50 characters.'
        required: false
        example: mqeopfuudtdsufvyvddqa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].item_name':
        name: 'items[].item_name'
        description: 'Must not be greater than 255 characters.'
        required: false
        example: mniihfqcoynlazghdtqtq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].unit':
        name: 'items[].unit'
        description: 'Must not be greater than 50 characters.'
        required: false
        example: xbajwbpilpmufinllwloa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].quantity':
        name: 'items[].quantity'
        description: 'Must be at least 0.01.'
        required: true
        example: 72
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].unit_price':
        name: 'items[].unit_price'
        description: 'Must be at least 0.'
        required: true
        example: 87
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'items[].discount_percentage':
        name: 'items[].discount_percentage'
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 4
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].discount_amount':
        name: 'items[].discount_amount'
        description: 'Must be at least 0.'
        required: false
        example: 40
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].tax_rate':
        name: 'items[].tax_rate'
        description: 'Must be at least 0. Must not be greater than 100.'
        required: false
        example: 18
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].description':
        name: 'items[].description'
        description: 'Must not be greater than 500 characters.'
        required: false
        example: 'Nihil autem omnis cum molestiae vel.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].total_without_tax':
        name: 'items[].total_without_tax'
        description: 'Must be at least 0.'
        required: false
        example: 51
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].total_foreign':
        name: 'items[].total_foreign'
        description: 'Must be at least 0.'
        required: false
        example: 32
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].total_local':
        name: 'items[].total_local'
        description: 'Must be at least 0.'
        required: false
        example: 7
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'items[].total':
        name: 'items[].total'
        description: 'Must be at least 0.'
        required: false
        example: 86
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      customer_id: consequatur
      customer_number: mqeopfuudtdsufvyvddqa
      customer_name: mniihfqcoynlazghdtqtq
      customer_email: ablanda@example.org
      customer_mobile: wbpilpmufinllwloa
      licensed_operator: uydlsmsjuryvojcybzvrb
      date: '2025-09-30T13:03:29'
      time: '13:03:29'
      due_date: '2106-10-30'
      exchange_rate: 45
      cash_paid: 56
      checks_paid: 16
      allowed_discount: 50
      discount_percentage: 16
      discount_amount: 19
      total_without_tax: 70
      tax_percentage: 20
      tax_amount: 12
      is_tax_inclusive: true
      total_amount: 66
      remaining_balance: 13
      total_foreign: 65
      total_local: 72
      notes: fvyvddqamniihfqcoynla
      items:
        -
          item_id: consequatur
          item_number: mqeopfuudtdsufvyvddqa
          item_name: mniihfqcoynlazghdtqtq
          unit: xbajwbpilpmufinllwloa
          quantity: 72
          unit_price: 87
          discount_percentage: 4
          discount_amount: 40
          tax_rate: 18
          description: 'Nihil autem omnis cum molestiae vel.'
          total_without_tax: 51
          total_foreign: 32
          total_local: 7
          total: 86
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/purchase/outgoing-orders/delete/{id}'
    metadata:
      groupName: 'Purchase Management / Outgoing Orders'
      groupDescription: |-

        APIs for managing outgoing purchase orders, including order creation, tracking, and supplier management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the delete.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/purchase/outgoing-orders/deleted/list
    metadata:
      groupName: 'Purchase Management / Outgoing Orders'
      groupDescription: |-

        APIs for managing outgoing purchase orders, including order creation, tracking, and supplier management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get deleted outgoing orders'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/purchase/outgoing-orders/deleted/list could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/purchase/outgoing-orders/{id}/restore'
    metadata:
      groupName: 'Purchase Management / Outgoing Orders'
      groupDescription: |-

        APIs for managing outgoing purchase orders, including order creation, tracking, and supplier management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore deleted outgoing order'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the outgoing order.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/purchase/outgoing-orders/helpers/customers
    metadata:
      groupName: 'Purchase Management / Outgoing Orders'
      groupDescription: |-

        APIs for managing outgoing purchase orders, including order creation, tracking, and supplier management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get customers for dropdown'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/purchase/outgoing-orders/helpers/customers could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/purchase/outgoing-orders/helpers/items
    metadata:
      groupName: 'Purchase Management / Outgoing Orders'
      groupDescription: |-

        APIs for managing outgoing purchase orders, including order creation, tracking, and supplier management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get items for dropdown'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/purchase/outgoing-orders/helpers/items could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/purchase/outgoing-orders/helpers/currencies
    metadata:
      groupName: 'Purchase Management / Outgoing Orders'
      groupDescription: |-

        APIs for managing outgoing purchase orders, including order creation, tracking, and supplier management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get currencies for dropdown'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/purchase/outgoing-orders/helpers/currencies could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/purchase/outgoing-orders/helpers/tax-rates
    metadata:
      groupName: 'Purchase Management / Outgoing Orders'
      groupDescription: |-

        APIs for managing outgoing purchase orders, including order creation, tracking, and supplier management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get tax rates for dropdown'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/purchase/outgoing-orders/helpers/tax-rates could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/purchase/outgoing-orders/helpers/live-exchange-rate
    metadata:
      groupName: 'Purchase Management / Outgoing Orders'
      groupDescription: |-

        APIs for managing outgoing purchase orders, including order creation, tracking, and supplier management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get live exchange rate for currency'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/purchase/outgoing-orders/helpers/live-exchange-rate could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/purchase/outgoing-orders/helpers/form-data
    metadata:
      groupName: 'Purchase Management / Outgoing Orders'
      groupDescription: |-

        APIs for managing outgoing purchase orders, including order creation, tracking, and supplier management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get form data for creating outgoing order'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/purchase/outgoing-orders/helpers/form-data could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/purchase/outgoing-orders/helpers/search-form-data
    metadata:
      groupName: 'Purchase Management / Outgoing Orders'
      groupDescription: |-

        APIs for managing outgoing purchase orders, including order creation, tracking, and supplier management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get search form data'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/purchase/outgoing-orders/helpers/search-form-data could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/purchase/outgoing-orders/helpers/sortable-fields
    metadata:
      groupName: 'Purchase Management / Outgoing Orders'
      groupDescription: |-

        APIs for managing outgoing purchase orders, including order creation, tracking, and supplier management.
      subgroup: ''
      subgroupDescription: ''
      title: 'Get sortable fields'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "The route api/v1/purchase/outgoing-orders/helpers/sortable-fields could not be found."
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3V5EgbkvZcDPa166h8fd4ae'
    controller: null
    method: null
    route: null
    custom: []
